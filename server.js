// const express = require('express');
// const cors = require('cors');
// const dotenv = require('dotenv');
// const swaggerUi = require('swagger-ui-express');
// const swaggerJSDoc = require('swagger-jsdoc');

// dotenv.config();

// // --- CHANGE 1: Define PORT at the top ---
// // Read the port from the .env file, with a fallback to 8080 if it's not defined.
// const PORT = process.env.PORT || 8080;

// const app = express();

// // Middleware
// app.use(cors());
// app.use(express.json());
// app.use(express.urlencoded({ extended: true }));

// // Database connection and table creation
// const sequelize = require('./config/database');
// require('./models/report.model'); // Ensure model is loaded

// sequelize.sync({ force: false }).then(() => {
//     console.log('Database synced successfully.');
//     console.log('Table `tbl_report` is ready.');
// }).catch(err => {
//     console.error('Unable to sync database:', err);
// });

// // --- CHANGE 2: Update Swagger to use the dynamic PORT ---
// const swaggerOptions = {
//     swaggerDefinition: {
//         openapi: '3.0.0',
//         info: {
//             title: 'Report API',
//             version: '1.0.0',
//             description: 'API for managing project reports with JWT authentication',
//         },
//         servers: [
//             {
//                 url: `http://localhost:${PORT}`, // Use the dynamic PORT variable here
//                 description: 'Development Server'
//             }
//         ],
//         components: {
//             securitySchemes: {
//                 bearerAuth: { type: 'http', scheme: 'bearer', bearerFormat: 'JWT' },
//             },
//         },
//         security: [{ bearerAuth: [] }],
//     },
//     apis: ['./routes/*.js'],
// };

// const swaggerDocs = swaggerJSDoc(swaggerOptions);
// app.use('/api-docs', swaggerUi.serve, swaggerUi.setup(swaggerDocs));

// // API Routes
// const authRoutes = require('./routes/auth.routes');
// const reportRoutes = require('./routes/report.routes');
// app.use('/api/auth', authRoutes);
// app.use('/api/reports', reportRoutes);

// app.get('/', (req, res) => {
//     res.json({ message: 'Welcome to the Report API. Go to /api-docs for documentation.' });
// });

// // Start Server - This will now use the PORT defined at the top (3000 from your .env)
// app.listen(PORT, () => {
//     console.log(`Server is running on port ${PORT}.`);
//     console.log(`API documentation available at http://localhost:${PORT}/api-docs`);
// });



// const express = require('express');
// const cors = require('cors');
// const dotenv = require('dotenv');
// const swaggerUi = require('swagger-ui-express');
// const swaggerJSDoc = require('swagger-jsdoc');

// dotenv.config();

// const PORT = process.env.PORT || 3000;

// const app = express();

// // Middleware
// app.use(cors());
// app.use(express.json());
// app.use(express.urlencoded({ extended: true }));

// // Database connection and table creation
// const sequelize = require('./config/database');
// require('./models/report.model'); // Ensure model is loaded

// sequelize.sync({ force: false }).then(() => {
//     console.log('Database synced successfully.');
//     console.log('Table `tbl_report` is ready.');
// }).catch(err => {
//     console.error('Unable to sync database:', err);
// });

// // Swagger Configuration
// const swaggerOptions = {
//     swaggerDefinition: {
//         openapi: '3.0.0',
//         info: {
//             title: 'Report API Module',
//             version: '1.0.0',
//             description: 'A standalone module for managing reports. It is protected by JWT and expects a token generated by an external authentication service.',
//         },
//         servers: [
//             {
//                 url: `http://localhost:${PORT}`,
//                 description: 'Development Server'
//             }
//         ],
//         // The security definition is now the most important part of the docs
//         components: {
//             securitySchemes: {
//                 bearerAuth: {
//                     type: 'http',
//                     scheme: 'bearer',
//                     bearerFormat: 'JWT',
//                     description: 'Enter JWT token generated by the main authentication service.'
//                 },
//             },
//         },
//         // Apply security globally to all endpoints defined in this API
//         security: [{
//             bearerAuth: [],
//         }],
//     },
//     // Make sure this now only points to the report routes
//     apis: ['./routes/report.routes.js'],
// };

// const swaggerDocs = swaggerJSDoc(swaggerOptions);
// app.use('/api-docs', swaggerUi.serve, swaggerUi.setup(swaggerDocs));

// // --- REMOVED AUTH ROUTES ---
// // API Routes - Only report routes are left
// const reportRoutes = require('./routes/report.routes');
// app.use('/api/reports', reportRoutes);

// app.get('/', (req, res) => {
//     res.json({ message: 'Welcome to the Report API module. Go to /api-docs for documentation.' });
// });

// // Start Server
// app.listen(PORT, () => {
//     console.log(`Server is running on port ${PORT}.`);
//     console.log(`API documentation available at http://localhost:${PORT}/api-docs`);
// });







// const express = require('express');
// const cors = require('cors');
// const dotenv = require('dotenv');
// const swaggerUi = require('swagger-ui-express');
// const swaggerJSDoc = require('swagger-jsdoc');

// // Load environment variables from .env file
// dotenv.config();

// // Set up the port, reading from .env or defaulting to 3000
// const PORT = process.env.PORT || 3000;

// const app = express();

// // Standard middleware
// app.use(cors());
// app.use(express.json());
// app.use(express.urlencoded({ extended: true }));

// // Database connection and table creation
// const sequelize = require('./config/database');
// require('./models/report.model'); // This ensures the Report model is loaded by Sequelize

// // The `sync()` method will create the 'tbl_report' table if it does not exist.
// // It will not touch any other existing tables.
// sequelize.sync({ force: false }).then(() => {
//     console.log('Database synced successfully.');
//     console.log('Table `tbl_report` is ready.');
// }).catch(err => {
//     console.error('Unable to sync database:', err);
// });

// // --- Swagger Configuration (Authentication Disabled) ---
// const swaggerOptions = {
//     swaggerDefinition: {
//         openapi: '3.0.0',
//         info: {
//             title: 'Report API Module (Public)',
//             version: '1.0.0',
//             description: 'API for managing reports. Authentication is temporarily disabled for debugging.',
//         },
//         servers: [
//             {
//                 url: `http://localhost:${PORT}`,
//                 description: 'Development Server'
//             }
//         ],
//         components: {
//             securitySchemes: {
//                 bearerAuth: {
//                     type: 'http',
//                     scheme: 'bearer',
//                     bearerFormat: 'JWT',
//                     description: 'Enter JWT token for authentication.'
//                 },
//             },
//         },
//         security: [{ bearerAuth: [] }],
//         // The following 'components' and 'security' blocks are commented out
//         // to remove the global "Authorize" button from the Swagger UI.
//         /*
//         components: {
//             securitySchemes: {
//                 bearerAuth: {
//                     type: 'http',
//                     scheme: 'bearer',
//                     bearerFormat: 'JWT',
//                 },
//             },
//         },
//         security: [{
//             bearerAuth: [],
//         }],
//         */
//     },
//     // Path to the API docs files
//     apis: ['./routes/report.routes.js'],
// };

// const swaggerDocs = swaggerJSDoc(swaggerOptions);
// app.use('/api-docs', swaggerUi.serve, swaggerUi.setup(swaggerDocs));

// // API Routes
// const reportRoutes = require('./routes/report.routes');
// app.use('/api/reports', reportRoutes);

// // Simple root route for a basic health check / welcome message
// app.get('/', (req, res) => {
//     res.json({ message: 'Welcome to the Report API module. Go to /api-docs for documentation.' });
// });

// // Start the server
// app.listen(PORT, () => {
//     console.log(`Server is running on port ${PORT}.`);
//     console.log(`API documentation available at http://localhost:${PORT}/api-docs`);
// });















const express = require('express');
const cors = require('cors');
const dotenv = require('dotenv');
const swaggerUi = require('swagger-ui-express');
const swaggerJSDoc = require('swagger-jsdoc');

// Load environment variables from .env file
dotenv.config();

// Set up the port, reading from .env or defaulting to 3000
const PORT = process.env.PORT || 3000;

const app = express();

// Standard middleware
app.use(cors());
app.use(express.json());
app.use(express.urlencoded({ extended: true }));

// Database connection and table creation
const sequelize = require('./config/database');
require('./models/report.model'); // This ensures the Report model is loaded by Sequelize

// The `sync()` method will create the 'tbl_report' table if it does not exist.
// It will not touch any other existing tables.
sequelize.sync({ force: false }).then(() => {
    console.log('Database synced successfully.');
    console.log('Table `tbl_report` is ready.');
}).catch(err => {
    console.error('Unable to sync database:', err);
});

// --- Swagger Configuration ---
const swaggerOptions = {
    swaggerDefinition: {
        openapi: '3.0.0',
        info: {
            title: 'Report API Module',
            version: '1.0.0',
            description: 'API for managing reports with JWT authentication and query execution on specified tables.',
        },
        servers: [
            {
                url: `http://localhost:${PORT}`,
                description: 'Development Server'
            }
        ],
        components: {
            securitySchemes: {
                bearerAuth: {
                    type: 'http',
                    scheme: 'bearer',
                    bearerFormat: 'JWT',
                    description: 'Enter JWT token for authentication.'
                },
            },
        },
        security: [{ bearerAuth: [] }],
    },
    // Path to the API docs files
    apis: ['./routes/report.routes.js'],
};

const swaggerDocs = swaggerJSDoc(swaggerOptions);
app.use('/api-docs', swaggerUi.serve, swaggerUi.setup(swaggerDocs));

// API Routes
const reportRoutes = require('./routes/report.routes');
app.use('/api/reports', reportRoutes);

// Simple root route for a basic health check / welcome message
app.get('/', (req, res) => {
    res.json({ message: 'Welcome to the Report API module. Go to /api-docs for documentation.' });
});

// Start the server
app.listen(PORT, () => {
    console.log(`Server is running on port ${PORT}.`);
    console.log(`API documentation available at http://localhost:${PORT}/api-docs`);
});